datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// one-to-many Album -> Songs
model Album {
  @@map("albums")

  id String @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid

  name String
  songs Song[]
}

model Song {
  @@map("songs")

  id String @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid

  albumId String @map("album_id") @db.Uuid
  album Album @relation(fields: [albumId], references: [id])
  name String
}

// Band -> Members (Author)
// Band <-> Albums (compilations)
// Song <-> Authors

// const album = await db.album.create({
//   data: {
//     name: "Kill 'Em All",
//     songs: {
//       create: [
//         { name: "Hit the Lights" },
//         { name: "The Four Horsemen" },
//         { name: "Motorbreath" },
//         { name: "Jump in the Fire" },
//         { name: "(Anesthesia)-Pulling Teeth" },
//         { name: "Whiplash" },
//         { name: "Phantom Lord" },
//         { name: "No Remorse" },
//         { name: "Seek & Destroy" },
//         { name: "Metal Militia" },
//       ],
//     },
//   },
// })

// const songs = await db.song.findMany({ where: { albumId: album.id }})
// songs.length
// songs[0]

// const album = await db.album.findUnique({ where: { id: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' }})
// const album = await db.album.findFirst({ where: { name: 'Ride the Lightning' }})



// { name: 'Fight Fire with Fire', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'Ride the Lightning', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'For Whom the Bell Tolls', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'Fade to Black', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'Trapped Under Ice', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'Escape', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'Creeping Death', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },
// { name: 'The Call of Ktulu', albumId: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32' },

// { name: 'Fight Fire with Fire', album: album },
// { name: 'Ride the Lightning', album: album },
// { name: 'For Whom the Bell Tolls', album: album },
// { name: 'Fade to Black', album: album },
// { name: 'Trapped Under Ice', album: album },
// { name: 'Escape', album: album },
// { name: 'Creeping Death', album: album },
// { name: 'The Call of Ktulu', album: album },

// const fight = await db.song.create({ data: { name: 'Fight Fire with Fire', albumId: album.id }})
// const ride = await db.song.create({ data: { name: 'Ride the Lightning', albumId: album.id } })


// const bells = await db.song.create({ data: { name: 'For Whom the Bell Tolls', album: album } })
// Uncaught PrismaClientValidationError:
// Invalid `prisma.song.create()` invocation:

// {
//   data: {
//     name: 'For Whom the Bell Tolls',
//     album: {
//       id: 'e324ebb5-39f3-41fc-82d1-8c2f26fc7a32',
//       ~~
//       name: 'Ride the Lightning'
//       ~~~~
//     }
//   }
// }


// { name: 'Fight Fire with Fire', albumId: album.id },
// { name: 'Ride the Lightning', albumId: album.id },
// { name: 'For Whom the Bell Tolls', albumId: album.id },
// { name: 'Fade to Black', albumId: album.id },
// { name: 'Trapped Under Ice', albumId: album.id },
// { name: 'Escape', albumId: album.id },
// { name: 'Creeping Death', albumId: album.id },
// { name: 'The Call of Ktulu', albumId: album.id },

